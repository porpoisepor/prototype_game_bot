{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"argum",
				"invalid_argument"
			],
			[
				"case",
				"case\tBOOST TEST auto test case"
			],
			[
				"deltaTemperat",
				"deltaTemperatureCached"
			],
			[
				"inputtemp",
				"inputTemperature"
			],
			[
				"output",
				"outputTemperature"
			],
			[
				"heatca",
				"heatCapacityFlowrate"
			],
			[
				"heat",
				"heatCapacityFlowrate"
			],
			[
				"delta",
				"deltaTemperature"
			],
			[
				"specific",
				"specificHeat"
			],
			[
				"H",
				"HeatCapacityFlowrate"
			],
			[
				"mass",
				"massflowrate"
			],
			[
				"throw",
				"BOOST_CHECK_THROW"
			],
			[
				"floating",
				"floating_case\tBOOST TEST floating tolerance test case"
			],
			[
				"deltaTempe",
				"deltaTemperature_1"
			],
			[
				"tempera",
				"temperature_2"
			],
			[
				"tempe",
				"temperature_1"
			],
			[
				"bat",
				"BOOST_AUTO_TEST_CASE"
			],
			[
				"test",
				"unit_test"
			],
			[
				"suite",
				"suite\tBOOST TEST suite"
			],
			[
				"get",
				"get_by_value\t||const getter by value"
			],
			[
				"boosttest",
				"boost_test\tBOOST TEST default macro"
			],
			[
				"for",
				"for\trange for"
			],
			[
				"time",
				"time_since_epoch"
			],
			[
				"steady",
				"steadyString"
			],
			[
				"tran",
				"transformedColorPixel"
			],
			[
				"dot",
				"dotProductNormalLight"
			],
			[
				"sphere",
				"sphereSurfaceNormal"
			],
			[
				"inci",
				"incidencePointToLight"
			],
			[
				"incidence",
				"incidencePointToLight"
			],
			[
				"convertT",
				"convertToUchar"
			],
			[
				"conver",
				"convertToUchar"
			],
			[
				"outpu",
				"output\tc++_output_operator_single_value"
			],
			[
				"equat",
				"equationString"
			],
			[
				"light",
				"lightTransform_1"
			],
			[
				"reflec",
				"reflectionMultiplier"
			],
			[
				"refle",
				"reflectionMultiplier"
			],
			[
				"reflection",
				"reflectionMultiplier"
			],
			[
				"base",
				"baseColor"
			],
			[
				"reflect",
				"reflectionFunction"
			],
			[
				"centerto",
				"centerToIncidentVector"
			],
			[
				"inciden",
				"incidentVector"
			],
			[
				"distance",
				"distanceFromCenterToIncident"
			],
			[
				"center",
				"centerToIncidentVector"
			],
			[
				"centerTo",
				"centerToIncidentVector"
			],
			[
				"incid",
				"incidentVector"
			],
			[
				"camera",
				"cameraToCenter"
			],
			[
				"centero",
				"centerToIncident"
			],
			[
				"error",
				"errorPercent"
			],
			[
				"distan",
				"distanceFromCenter"
			],
			[
				"cameraTo",
				"cameraToScreenPixel"
			],
			[
				"cos",
				"cosAngleAB"
			],
			[
				"tp",
				"test_projections"
			],
			[
				"pixelPosi",
				"pixelPositions"
			],
			[
				"pixel",
				"pixelArrayCopy"
			],
			[
				"norm",
				"normCached_"
			],
			[
				"elemen",
				"elementSeparator"
			],
			[
				"outp",
				"output\tc++_output_operator_single_value"
			],
			[
				"screen",
				"screen_1"
			],
			[
				"hei",
				"height"
			],
			[
				"wi",
				"width"
			],
			[
				"out",
				"output\tc++_output_operator_single_value"
			],
			[
				"pixal",
				"pixelArrayCopy"
			],
			[
				"Pixel",
				"RgbPixel"
			],
			[
				"he",
				"height_"
			],
			[
				"string",
				"stringstream"
			],
			[
				"heigh",
				"height"
			],
			[
				"wid",
				"width"
			],
			[
				"cpp_",
				"cpp_standard_flag"
			],
			[
				"display",
				"display_variables"
			],
			[
				"cel",
				"celsiusTemperature"
			]
		]
	},
	"buffers":
	[
		{
			"file": "game_bot.ahk",
			"settings":
			{
				"buffer_size": 910,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "globals.ahk",
			"settings":
			{
				"buffer_size": 2321,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "config_class.ahk",
			"settings":
			{
				"buffer_size": 696,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 18 files for \"latency\" (regex)\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\character_class.ahk:\n   56          updateManaConsumption(){\n   57              rotationConsumptionPerSec := 0\n   58:             rotationConsumptionPerSecWithLatency := 0\n   59              for spellName, spell in this.spells{\n   60                  rotationConsumptionPerSec += spell.manaConsumptionPerSec\n   61:                 rotationConsumptionPerSecWithLatency += spell.manaConsumptionPerSecWithLatency\n   62              }\n   63              this.data.rotationConsumptionPerSec := rotationConsumptionPerSec\n   64:             this.data.rotationConsumptionPerSecWithLatency := rotationConsumptionPerSecWithLatency\n   65          }\n   66          updateRotationTime(){\n   ..\n   68              this.data.timeForFullMana := this.data.maxMana / (this.data.manaRegen - this.data.autoattackManaPerSec)\n   69              this.data.timeForFullManaConsumption := this.data.maxMana / this.data.rotationConsumptionPerSec\n   70:             this.data.timeForFullManaConsumptionWithLatency := this.data.maxMana / this.data.rotationConsumptionPerSecWithLatency\n   71              this.data.waitTimeBeforeStartingRotation := this.data.timeForFullMana - this.data.timeForFullManaConsumption\n   72:             this.data.waitTimeBeforeStartingRotationWithLatency := this.data.timeForFullMana - this.data.timeForFullManaConsumptionWithLatency\n   73          }\n   74          updateMana(currentMana){\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\config_class.ahk:\n    6          notRunningIcon := this.iconsDir \"not_running.bmp\"\n    7          ;moved here\n    8:         latency := 300 ;ms\n    9          updateRate := 190 ;ms\n   10          printInsteadOfSendHotkey := false\n   11          stop := false\n   12:         considerLatency := false\n   13          muteDebug := false\n   14          copyInputFromGameToScreen := true\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\globals.ahk:\n   28  \n   29      ;global config\n   30:     global latency := 300 ;ms\n   31      global updateRate := 190 ;ms\n   32      global printInsteadOfSendHotkey := false\n   33      global stop := false\n   34:     global considerLatency := false\n   35      global muteDebug := false\n   36      global copyInputFromGameToScreen := true\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\gui_callbacks.ahk:\n   11          refreshGUI()\n   12      }\n   13:     LatencyEditCallback(){\n   14          Gui, Submit, NoHide\n   15:         debugPrint(\"LatencyEditCallback called, result: \" LatencyEdit)\n   16          refreshGUI()\n   17          recalculateAllSpellLatencies()\n   ..\n   45      refreshGUI(){\n   46          guiData := getGUIData()\n   47:         latency := guiData.latency\n   48          mainChar.init(guiData.level, guiData.vocation, 0)\n   49          GuiControl, Text, MaxMana, % mainChar.data.maxMana\n   ..\n   51          GuiControl, Text, AutoattackManaPerSec, % mainChar.data.autoattackManaPerSec\n   52          GuiControl, Text, RotationConsumptionPerSec, % mainChar.data.rotationConsumptionPerSec\n   53:         GuiControl, Text, RotationConsumptionPerSecWithLatency, % mainChar.data.rotationConsumptionPerSecWithLatency\n   54          GuiControl, Text, SpentMana, % mainChar.data.spentMana\n   55          GuiControl, Text, TimeForFullMana, % mainChar.data.timeForFullMana\n   56          GuiControl, Text, TimeForFullManaConsumption, % mainChar.data.timeForFullManaConsumption\n   57          GuiControl, Text, WaitTimeBeforeStartingRotation, % mainChar.data.waitTimeBeforeStartingRotation\n   58:         GuiControl, Text, WaitTimeBeforeStartingRotationWithLatency, % mainChar.data.waitTimeBeforeStartingRotationWithLatency\n   59      }\n   60      getGUIData(){\n   ..\n   62          vocation := vocations[VocationRadioGroup - 1]\n   63          level := LevelEdit\n   64:         latency := LatencyEdit\n   65          ;VocationRadioGroup\n   66          ;LevelEdit\n   67:         ;LatencyEdit\n   68:         debugPrint(\"vocation, level, latency: \" vocation \", \" level \", \" latency)\n   69:         return { \"vocation\": vocation, \"level\": level, \"latency\": latency}\n   70      }\n   71      initGUI(){\n   ..\n   82          Gui, Add, Edit, vLevelEdit gLevelEditCallback, 100\n   83          ;Gui, Add, Button, vRefreshDataButton +wrap , Refresh\n   84:         Gui, Add, Text, +r1 +wrap +ys, Latency(ms)\n   85:         Gui, Add, Edit, vLatencyEdit gLatencyEditCallback, 300\n   86          ;stats\n   87          Gui, Add, Text, +r1 +wrap +ys, maxMana\n   ..\n   89          Gui, Add, Text, +r1 +wrap , autoattackManaPerSec\n   90          Gui, Add, Text, +r1 +wrap , rotationConsumptionPerSec\n   91:         Gui, Add, Text, +r1 +wrap , rotationConsumptionPerSecWithLatency\n   92          Gui, Add, Text, +r1 +wrap , spentMana\n   93          Gui, Add, Text, +r1 +wrap , timeForFullMana\n   94          Gui, Add, Text, +r1 +wrap , timeForFullManaConsumption\n   95          Gui, Add, Text, +r1 +wrap , waitTimeBeforeStartingRotation\n   96:         Gui, Add, Text, +r1 +wrap , waitTimeBeforeStartingRotationWithLatency\n   97          ;stats\n   98          Gui, Add, Text, +r1 +wrap +w60 +ys vMaxMana, % mainChar.data.maxMana\n   ..\n  100          Gui, Add, Text, +r1 +wrap +w60 vAutoattackManaPerSec, % mainChar.data.autoattackManaPerSec\n  101          Gui, Add, Text, +r1 +wrap +w60 vRotationConsumptionPerSec, % mainChar.data.rotationConsumptionPerSec\n  102:         Gui, Add, Text, +r1 +wrap +w60 vRotationConsumptionPerSecWithLatency, % mainChar.data.rotationConsumptionPerSecWithLatency\n  103          Gui, Add, Text, +r1 +wrap +w60 vSpentMana, % mainChar.data.spentMana\n  104          Gui, Add, Text, +r1 +wrap +w60 vTimeForFullMana, % mainChar.data.timeForFullMana\n  105          Gui, Add, Text, +r1 +wrap +w60 vTimeForFullManaConsumption, % mainChar.data.timeForFullManaConsumption\n  106          Gui, Add, Text, +r1 +wrap +w60 vWaitTimeBeforeStartingRotation, % mainChar.data.waitTimeBeforeStartingRotation\n  107:         Gui, Add, Text, +r1 +wrap +w60 vWaitTimeBeforeStartingRotationWithLatency, % mainChar.data.waitTimeBeforeStartingRotationWithLatency\n  108  \n  109          ;meta\n  ...\n  120          ;autoattackManaPerSec: 0\n  121          ;rotationConsumptionPerSec: 290.000000\n  122:         ;rotationConsumptionPerSecWithLatency: 231.103679\n  123          ;spentMana: 0\n  124          ;timeForFullMana: 26.250000\n  125          ;timeForFullManaConsumption: 1.448276\n  126:         ;timeForFullManaConsumptionWithLatency: 1.817366\n  127          ;waitTimeBeforeStartingRotation: 24.801724\n  128:         ;waitTimeBeforeStartingRotationWithLatency: 24.432634\n  129      }\n  130  \n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\gui_labels.ahk:\n   10      global LevelEdit :=\n   11      ;global RefreshDataButton :=\n   12:     global LatencyEdit :=\n   13      global CopyInputFromGameToScreenCheckbox :=\n   14  \n   ..\n   18      global AutoattackManaPerSec :=\n   19      global RotationConsumptionPerSec :=\n   20:     global RotationConsumptionPerSecWithLatency :=\n   21      global SpentMana :=\n   22      global TimeForFullMana :=\n   23      global TimeForFullManaConsumption :=\n   24      global WaitTimeBeforeStartingRotation :=\n   25:     global WaitTimeBeforeStartingRotationWithLatency :=\n   26  \n   27      ;program config\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\helpers.ahk:\n   89          while(!stop){\n   90              doSingleRotation()\n   91:             sleepWhileNotifyingRemainingTime(mainChar.data.waitTimeBeforeStartingRotationWithLatency * 1000)\n   92:             mainChar.decreaseCooldowns(mainChar.data.waitTimeBeforeStartingRotationWithLatency * 1000)\n   93          }\n   94      }\n   ..\n  117          for vocationSpellCategoryIndex, vocationSpellCategory in allSpells{\n  118              for spellName, spell in vocationSpellCategory{\n  119:                 spell.recalculateLatency()\n  120              }\n  121          }\n  122          mainChar.update()\n  123          ;for each spell\n  124:         ;    spell.recalculateLatency()\n  125          ;global sorcererSpells := {\"invisibility\": invisibilitySpell, \"hells core\": hellsCoreSpell, \"rage of the skies\": rageOfTheSkiesSpell}\n  126          ;global knightSpells := {\"fierce berserk\": fierceBerserkSpell, \"charge\": chargeSpell}\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\init.ahk:\n    1  ;INIT =================================================================================\n    2  \n    3:     ;LATER OBJECTS DEPEND ON SOME GLOBAL CONFIGURATION SUCH AS LATENCY\n    4      currentConfig.init()\n    5  \n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\spell_class.ahk:\n    9          cooldownGroups := []\n   10          manaConsumptionPerSec := 1\n   11:         manaConsumptionPerSecWithLatency := 1\n   12          hotkey := \"\"\n   13  \n   ..\n   19              this.cooldownGroups := cooldownGroups\n   20              this.manaConsumptionPerSec := this.mana * 1000 / this.cooldown\n   21:             this.manaConsumptionPerSecWithLatency := this.mana * 1000 / (this.cooldown + latency)\n   22              this.hotkey := hotkey\n   23          }\n   24:         recalculateLatency(){\n   25:             this.manaConsumptionPerSecWithLatency := this.mana * 1000 / (this.cooldown + latency)\n   26          }\n   27          activateCooldowns(){\n   28:             this.currentCooldown := this.cooldown + latency\n   29              for cooldownGroupIndex, cooldownGroup in this.cooldownGroups{\n   30:                 cooldownGroup.currentCooldown := cooldownGroup.cooldown + latency\n   31              }  \n   32          }\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\TODO.txt:\n   20      ;       [x]add hotkeys for each spell\n   21      ;           [x]also add it to the cast() of each spell\n   22:     ;       [x]find out where latency should go\n   23:     ;          [x]find if it should be currentCooldown <= (0 - latency) in the mid of the rotation cycle\n   24:     ;               [x]NO, actually it should be currentCooldown := cooldown + latency in the cooldown activation()\n   25      ;       [x]check in loop if spells should be cast every N milliseconds, N is the chosen updateRate (preferably < 200ms per udpate, > 5 per second)\n   26      ;       [x]keep track of mana spent\n\nC:\\Users\\win_second_lobster\\Desktop\\AHK macros\\tibia_trainer_folder\\unit_tests.ahk:\n   68          ;       [x]add hotkeys for each spell\n   69          ;           [x]also add it to the cast() of each spell\n   70:         ;       [x]find out where latency should go\n   71:         ;          [x]find if it should be currentCooldown <= (0 - latency) in the mid of the rotation cycle\n   72:         ;               [x]NO, actually it should be currentCooldown := cooldown + latency in the cooldown activation()\n   73          ;       [x]check in loop if spells should be cast every N milliseconds, N is the chosen updateRate (preferably < 200ms per udpate, > 5 per second)\n   74          ;       [x]keep track of mana spent\n\n63 matches across 10 files\n",
			"settings":
			{
				"buffer_size": 11185,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "hotkeys.ahk",
			"settings":
			{
				"buffer_size": 1774,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "gui_callbacks.ahk",
			"settings":
			{
				"buffer_size": 6736,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 138.0,
		"last_filter": "remove",
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"Package Control: package",
				"Package Control: Remove Package"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"resource",
				"PackageResourceViewer: Open Resource"
			],
			[
				"instant",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"scope",
				"Scope Hunter: Show Scope Under Cursor(s)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package instal\t",
				"Package Control: Install Package"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"clang",
				"Clang Format: Select Style"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"file:re",
				"File: Rename"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package install",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"sublime.log_commands(True)",
			"sublime.log_commands(true)",
			"sublime.log_input(False)",
			"sublime.log_commands(False)",
			"sublime.log_input(True)",
			"sublime.log_commands(True)",
			"asdasd",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder"
	],
	"file_history":
	[
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/spell_class.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/init.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/TODO.txt",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/ahk_default_multiline_comment.sublime-snippet",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/config.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/hotkeys.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/bs_4.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/gui_callbacks.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/unit_tests.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/01_tibia_window_train_test - Copy.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/00_tibia_window_train_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/globals.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/helpers.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/character_class.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/config_class.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/gui_labels.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/sample_debug_log_2.txt",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_trainer_folder/sample_debug_log.txt",
		"/C/Users/win_second_lobster/Desktop/AHK macros/01_tibia_window_train_test - Copy.ahk",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/ahk_default_template.sublime-snippet",
		"/C/Users/win_second_lobster/AppData/Roaming/Tibia/Server Log.txt",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/ahk_default_separator.sublime-snippet",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/ahk_default_function.sublime-snippet",
		"/C/Users/win_second_lobster/Desktop/AHK macros/gui_test.ahk",
		"/C/Users/win_second_lobster/Desktop/desktop temp/README.txt",
		"/C/Users/win_second_lobster/Desktop/AHK macros/keydelay_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/function_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/tibia_window_train_test.ahk",
		"/E/programas/Tibialyzer v1.3.0/Database/MemoryAddresses.txt",
		"/C/Users/win_second_lobster/Desktop/AHK macros/change_tray_color_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/traytip_test.ahk",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.317/DesktopToastsSample.h",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.380/DesktopToastsSample.cpp",
		"/C/Users/win_second_lobster/Desktop/AHK macros/variables_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/sleep_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/maximize_test.ahk",
		"/C/Users/win_second_lobster/Desktop/AHK macros/bs_4 - Copy.ahk",
		"/E/projetos/AndroidStudioProjects/Basquete/app/src/main/res/layout/activity_main.xml",
		"/E/projetos/AndroidStudioProjects/Basquete/app/src/main/AndroidManifest.xml",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E09.720p.WEBRip.x264-STRiFE[rarbg]/Mindhunter - 01x09 - Episode 9.WEBrip.STRiFE.English.HI.C.updated.Addic7ed.com.srt",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E10.720p.WEBRip.x264-STRiFE[rarbg]/Mindhunter - 01x10 - Episode 10.WEBrip.STRiFE.English.HI.C.updated.Addic7ed.com.srt",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E06.720p.WEBRip.x264-STRiFE[rarbg]/Mindhunter - 01x06 - Episode 6.WEBrip.STRiFE.English.HI.C.updated.Addic7ed.com (1).srt",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E05.720p.WEBRip.x264-STRiFE[rarbg]/Mindhunter - 01x05 - Episode 5.WEBrip.STRiFE.English.HI.C.updated.Addic7ed.com.srt",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E04.720p.WEBRip.x264-STRiFE[rarbg]/Mindhunter - 01x04 - Episode 4.WEBrip.STRiFE.English.HI.C.updated.Addic7ed.com.srt",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E03.WEBRip.x264-RARBG/Mindhunter - 01x03 - Episode 3.WEB-DL.x264-RARBG.English.HI.C.updated.Addic7ed.com.srt",
		"/E/Documents/C++/opentibia_source/server-master/CMakeLists.txt",
		"/E/Documents/C++/opentibia_source/server-master/README.DATABASE",
		"/E/Documents/C++/opentibia_source/server-master/src/compiler/workarounds.h",
		"/E/Documents/C++/opentibia_source/server-master/src/compiler/gcc.h",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E01.WEBRip.x264-RARBG/Mindhunter - 01x01 - Episode 1.WEB-DL.x264-RARBG+STRiFE.English.HI.C.updated.Addic7ed.com.srt",
		"/E/Documents/new_series/mindhunter/Mindhunter.S01E02.720p.REPACK.WEBRip.x264-STRiFE[rarbg]/Mindhunter - 01x02 - Episode 2.REPACK.WEBrip.STRiFE.English.HI.C.updated.Addic7ed.com.srt",
		"/E/projetos/git_test/test/README.md",
		"/E/projetos/git_test/test/readme.me",
		"/C/Users/win_second_lobster/Desktop/temp/README.txt",
		"/C/Users/win_second_lobster/Desktop/MouseWithoutBorders/ScreenCaptures/RustServer.bat.txt",
		"/E/Documents/0_img/rust_coords/rust_coords_70111.txt",
		"/E/Documents/0_img/rust_2_november_seeds.txt",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/Makefile.sublime-settings",
		"/C/Users/win_second_lobster/AppData/Roaming/Sublime Text 3/Packages/User/C++.sublime-settings",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.615/sublime3_keys.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.244/ReadMe.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.776/Read Me.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.272/ReadMe.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.112/Read Me.txt",
		"/E/0_torrents/setup/Sublime Text 3 Dev Build 3133 Final + Patch/Read Me.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/tudo_athens/email/quit_b.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/fish_desc.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/culinaria_desc.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/fruit_desc.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/people_desc.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/40_descricoes.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/people.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/fruit.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/culinaria.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/fish.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/40_descricoes_backup.txt",
		"/E/projetos/resources/android_accelerate/dicionario_tupi/40_palavras.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.352/The.Walking.Dead.S08E02.720p.HDTV.x264-FLEET.srt",
		"/E/Documents/0_img/ch/coisas_para_fazer_post_25_10_2017.txt",
		"/E/Documents/0_img/ch/help.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/poster/rascunho.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/poster/resumo_JIC_2017_Felipe_Oliveira_DFAR_v6.0.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/poster/tabela.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/comentario_resubmissao.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/comentarios.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/resumo_dfar_jic.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/resumo_dfar_jic_final_quase.txt",
		"/E/Documents/0_estagio_dfar_e_projeto_final_athens/jic_(dfar_new)/email_flavio.txt",
		"/E/Documents/0_img/ch/tooth.txt",
		"/E/Documents/0_img/ch/office64_32.txt",
		"/E/Documents/0_img/ch/office_s.txt",
		"/E/Documents/new_series/the_walking_dead/The.Walking.Dead.S08E01.720p.HDTV.x264-AVS[rarbg]/The.Walking.Dead.S08E01.HDTV.x264-SVA.srt",
		"/E/Documents/0_img/ch/bots.txt",
		"/E/Documents/0_img/ch/jejum.txt",
		"/E/Documents/0_img/ch/coconut_oil.txt",
		"/E/Documents/0_img/ch/unknown_link.txt",
		"/E/Documents/0_img/ch/router_tibia.txt",
		"/E/Documents/0_img/ch/nested.txt",
		"/E/Documents/0_img/ch/acucar.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.227/LEIA-ME [by ment0r].txt",
		"/E/Documents/0_img/ch/titulos.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.404/leia-me[ment0r].txt",
		"/E/Documents/C++/C/hello_test/Makefile",
		"/E/Documents/C++/C/hello_test/hello.c",
		"/E/Documents/0_img/ch/caminho2.txt",
		"/E/Documents/0_img/ch/callphone_cancer.txt",
		"/E/Documents/0_img/ch/performance_post_2.txt",
		"/E/Documents/0_img/ch/performance_post.txt",
		"/E/Documents/C++/collatz/collatz.cpp",
		"/E/Documents/0_img/ch/fios_big_bang.txt",
		"/E/Documents/C++/collatz/longinttest.cpp",
		"/E/Documents/C++/collatz/Makefile",
		"/E/Documents/C++/collatz/final.cpp",
		"/E/Documents/C++/collatz/Makefile2",
		"/E/Documents/0_img/ch/obs.txt",
		"/E/Documents/0_img/ch/obs",
		"/E/Documents/0_img/ch/game_industry.txt",
		"/E/Documents/new_series/rick_and_morty/Rick.and.Morty.S03E10.The.Rickchurian.Mortydate.1080p.AMZN.WEBRip.DDP5.1.x264-QOQ[rarbg]/Rick and Morty - 03x10 - The Rickchurian Mortydate.Amazon-WEB-DL,QOQ+Uncensored.WEB-DL.English.HI.C.orig.Addic7ed.co.srt",
		"/E/Documents/0_img/ch/origin_3.txt",
		"/E/Documents/0_img/ch/origin_2.txt",
		"/E/Documents/0_img/ch/origin.txt",
		"/E/Documents/0_img/ch/electromagnetic_storm.txt",
		"/C/Users/win_second_lobster/AppData/Roaming/SumatraPDF/SumatraPDF-settings.txt",
		"/E/Documents/0_img/ch/tags_test.txt",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.219/changelog.txt",
		"/E/Documents/book_windows/graphical_programming/superbible_downloads/sb7code-master/src/movingtri/movingtri.cpp",
		"/C/Users/win_second_lobster/AppData/Local/Temp/Rar$DIa0.150/Read Me.txt"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"global",
			"latency",
			"global",
			"currentconfig",
			"configstate",
			"eatfood",
			"updatestate",
			"printspell",
			"instead",
			"printInstead",
			"cast\\(",
			"debugprint",
			"debugprint\\( ",
			"debugprint",
			"recalcu",
			"GuiSubmit",
			"vRadioGroupVocation",
			"radio",
			"debugprint",
			"waittime",
			"timefor",
			"stop",
			"consider",
			"time_interval",
			"notify",
			"spentmana",
			"cast\\(sp",
			"testcharactermul",
			"spell",
			"updateRe",
			"reset",
			"updateR",
			"spent",
			"spend",
			"spendMana",
			"config",
			"test",
			"latency",
			"acti",
			"allsp",
			"Cooldown",
			"manaConsumptionPerSec",
			"server",
			"latency",
			"somespell",
			"displaytext1",
			"vdisplaytext1",
			"decreasecoold",
			"sorcererSpells",
			"\"",
			"vocations",
			"\",",
			"vocations\\.",
			"spells",
			"\"cooldown\"",
			"rotation",
			"printDebug",
			"getcooldown",
			"mainchar\\.spell",
			"mainchar.spell",
			"invisibilitySpell",
			"spell.",
			"spell\\.",
			"spell.",
			"activatec",
			"your att",
			"DisplayText2",
			"decreaseCooldowns",
			"guicontrol, te",
			"Remaining",
			"msg",
			"icon",
			"guicontrol, te",
			" ,%",
			"current_ic",
			"stop",
			"false",
			"words",
			"Value",
			"value",
			"key",
			"currentC",
			"elder druid",
			"master sorcerer",
			"Elite Knight",
			"Royal Paladin",
			"focus",
			"vdispla",
			"true",
			"oficina",
			".biz",
			"no-ip",
			"intel",
			"intelbra",
			"tray",
			"mainch",
			" .",
			"Mana",
			"mana",
			":",
			"0",
			"150",
			" .",
			"Enter",
			"assist",
			"LoremId",
			"new",
			"lorem_id",
			"blasb",
			"`n",
			"MenuHandlerB",
			"heal",
			"( .*)",
			"stop",
			"\"\n",
			"\".`",
			"return",
			"ahk",
			"hotkey",
			"bot",
			", ",
			" ",
			"asd",
			"gem",
			"wall",
			"come",
			"setx",
			"comp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"invisibilitySpell",
			"Remain",
			"",
			"\\t",
			"\\n\\n",
			"\\n",
			"",
			"<item>\"$1\"</item>",
			"<item>$1</item>",
			"<item>($1)",
			"<item>(1)",
			"",
			"\\t",
			"* ",
			"*",
			"",
			"_",
			"",
			"_",
			" ",
			"_",
			"",
			",",
			"",
			"0.1",
			"weight",
			"",
			"_",
			"",
			".",
			"_",
			"size_t",
			" ",
			"",
			"https://www.youtube.com/watch",
			"",
			"_",
			"-",
			"_",
			"",
			"_",
			"",
			"-Pad",
			"[*]",
			"\\n–",
			"_",
			"Cold",
			"COLD",
			"hdmi",
			"",
			"hdmi",
			"_",
			" ",
			"_",
			" ",
			"/",
			"\\n",
			".",
			"uchar",
			"",
			" \\(char*\\)\"",
			"\\(char*\\)\"",
			" \\(char*\\)\"",
			"0.5",
			"1.9",
			"1.9999",
			"1.5",
			"1",
			"_",
			"\nPoint operator*(const Point& leftPoint, float scalar){\n    return Point{leftPoint.x * scalar, leftPoint.y * scalar, leftPoint.z * scalar};\n}",
			"rightVector",
			"right",
			"left",
			"$1Vector.$2()",
			"$1Vector.$2",
			"$1asd",
			"std::int64_t",
			"\\1blab",
			"\\1",
			"$1a",
			"std::int64_t",
			"0",
			"255",
			"_",
			"  \n",
			"_",
			"//",
			"_",
			" ",
			"_",
			"",
			"_",
			"\\n",
			"",
			"\\n",
			"",
			"\\n",
			"",
			"\\t",
			"\\n",
			"",
			"\\n",
			"",
			"\\n",
			"",
			"\\n",
			"",
			"\\n",
			"",
			"\\t",
			"",
			"set current",
			"\\t",
			"b",
			"",
			"_",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "game_bot.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 910,
						"regions":
						{
						},
						"selection":
						[
							[
								598,
								598
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "globals.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2321,
						"regions":
						{
						},
						"selection":
						[
							[
								1400,
								1400
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "config_class.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 696,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11185,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										269,
										276
									],
									[
										470,
										477
									],
									[
										512,
										519
									],
									[
										683,
										690
									],
									[
										723,
										730
									],
									[
										1088,
										1095
									],
									[
										1158,
										1165
									],
									[
										1357,
										1364
									],
									[
										1436,
										1443
									],
									[
										1695,
										1702
									],
									[
										1852,
										1859
									],
									[
										2086,
										2093
									],
									[
										2255,
										2262
									],
									[
										2501,
										2508
									],
									[
										2586,
										2593
									],
									[
										2624,
										2631
									],
									[
										2796,
										2803
									],
									[
										2815,
										2822
									],
									[
										3216,
										3223
									],
									[
										3270,
										3277
									],
									[
										3713,
										3720
									],
									[
										3772,
										3779
									],
									[
										3934,
										3941
									],
									[
										3945,
										3952
									],
									[
										4034,
										4041
									],
									[
										4090,
										4097
									],
									[
										4126,
										4133
									],
									[
										4198,
										4205
									],
									[
										4208,
										4215
									],
									[
										4439,
										4446
									],
									[
										4483,
										4490
									],
									[
										4496,
										4503
									],
									[
										4808,
										4815
									],
									[
										5149,
										5156
									],
									[
										5567,
										5574
									],
									[
										5621,
										5628
									],
									[
										6134,
										6141
									],
									[
										6193,
										6200
									],
									[
										6375,
										6382
									],
									[
										6566,
										6573
									],
									[
										6692,
										6699
									],
									[
										6906,
										6913
									],
									[
										7126,
										7133
									],
									[
										7357,
										7364
									],
									[
										7652,
										7659
									],
									[
										7762,
										7769
									],
									[
										8003,
										8010
									],
									[
										8152,
										8159
									],
									[
										8664,
										8671
									],
									[
										8916,
										8923
									],
									[
										9159,
										9166
									],
									[
										9206,
										9213
									],
									[
										9299,
										9306
									],
									[
										9359,
										9366
									],
									[
										9406,
										9413
									],
									[
										9527,
										9534
									],
									[
										9697,
										9704
									],
									[
										9976,
										9983
									],
									[
										10064,
										10071
									],
									[
										10192,
										10199
									],
									[
										10683,
										10690
									],
									[
										10775,
										10782
									],
									[
										10907,
										10914
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								8758,
								8758
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2970.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "hotkeys.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1774,
						"regions":
						{
						},
						"selection":
						[
							[
								334,
								334
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "gui_callbacks.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6736,
						"regions":
						{
						},
						"selection":
						[
							[
								1905,
								1905
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 405.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.scopehunter.results":
	{
		"height": 118.0
	},
	"pinned_build_system": "",
	"project": "game_bot_sublime_project.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 208.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
